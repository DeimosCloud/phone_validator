name: Deploy Application

on:
  workflow_dispatch
    # push:
       
    #   branches: 
    #      - Jumia-test
       
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: eu-west-1
    FE_ECR_REPOSITORY: validator-ftend
    BE_ECR_REPOSITORY: validator-bkend
    ECR_URL: 992122884453.dkr.ecr.eu-west-1.amazonaws.com
    K8S_NAMESPACE: validator
    FE_DEPLOYMENT_NAME: frontend
    BE_DEPLOYMENT_NAME: backend
  
jobs:
  application-deploy:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Build and push Front End image
        uses: docker/build-push-action@v4
        with:
          context: validator-frontend
          file: ./validator-frontend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.FE_ECR_REPOSITORY }}:${{ github.sha }}
          provenance: false

      - name: Build and push Back End image
        uses: docker/build-push-action@v4
        with:
            context: validator-backend
            file: ./validator-backend/Dockerfile
            push: true
            tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.BE_ECR_REPOSITORY }}:${{ github.sha }}
            provenance: false

      - name: Run Docker container on Microservice server
        run: |
              echo "Writing key to file"
              echo "${{ secrets.MASTER_NODE_SSH_KEY }}" > key.pem
              chmod 400 key.pem
              echo "Running ansible-playbook command"
              ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.229.248.28 "eval \"\$(ssh-agent -s)\" && ssh-add ~/.ssh/microservice.pem  && cd ansible && ansible-playbook -i hosts -v playbooks/docker-run.yml"
  
      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl --progress-bar --location --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client
  
      - name: Deploy Frontend to Kubernetes
        run: |
           echo "Deploying Frontend to Kubernetes"
           aws eks update-kubeconfig --name jumia-cluster
           kubectl apply -f k8_manifest/
           kubectl set image deployment $FE_DEPLOYMENT_NAME $FE_DEPLOYMENT_NAME=$ECR_URL/$FE_ECR_REPOSITORY:${{ github.sha }} -n validator
           kubectl set image deployment $BE_DEPLOYMENT_NAME $BE_DEPLOYMENT_NAME=$ECR_URL/$BE_ECR_REPOSITORY:${{ github.sha }} -n validator
  