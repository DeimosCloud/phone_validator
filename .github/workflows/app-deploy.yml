name: Deploy Application

on:
  workflow_dispatch
    # push:
       
    #   branches: 
    #      - Jumia-test
       
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: eu-west-1
    ECR_REPOSITORY: validator-ftend
        # 992122884453.dkr.ecr.eu-west-1.amazonaws.com
    K8S_NAMESPACE: jumia-apps
    K8S_DEPLOYMENT_NAME: validator-ftend
  
jobs:
  application-deploy:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./validator-frontend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          provenance: false
  
    #   - name: Install and configure kubectl
    #     run: |
    #       VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
    #       curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl --progress-bar --location --remote-name
    #       chmod +x kubectl
    #       sudo mv kubectl /usr/local/bin/
    #       kubectl version --client
  
    #   - name: Deploy to Kubernetes
    #     run: |
    #       kubectl config use-context my-k8s-cluster
    #       kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} my-container=${{ env.ECR_REPOSITORY }}:${{ github.sha }} --namespace ${{ env.K8S_NAMESPACE }}
  